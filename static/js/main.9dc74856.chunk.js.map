{"version":3,"sources":["components/Login/index.js","components/Header/index.js","components/Home/index.js","components/Profile/index.js","components/JobItem/index.js","components/FiltersGroup/index.js","components/Jobs/index.js","components/SkillItem/index.js","components/SimilarJobItem/index.js","components/JobItemDetails/index.js","components/Not Found/index.js","components/Protected Route/index.js","App.js","index.js"],"names":["Login","state","username","password","errorMsg","showError","onChangeUsername","event","setState","target","value","onChangePassword","onSubmitSuccess","jwtToken","history","props","Cookies","set","expires","replace","onSubmitFailure","error","submitForm","a","preventDefault","userDetails","options","method","body","JSON","stringify","fetch","response","console","log","json","data","ok","jwt_token","error_msg","this","undefined","get","to","className","src","alt","onSubmit","htmlFor","type","placeholder","onChange","id","Component","Header","onClickLogout","remove","onClick","withRouter","Home","apiStatusConstants","Profile","apiStatus","profileData","retry","getProfileDetails","headers","Authorization","fetchedData","updateFetchedData","name","profile_details","profileImageUrl","profile_image_url","shortBio","short_bio","renderProfileSection","renderFailureView","renderProfileLoader","testid","color","height","width","renderProfile","nextProps","nextState","JobItem","jobDetails","companyLogoUrl","employmentType","jobDescription","location","packagePerAnnum","rating","title","employmentTypesList","label","employmentTypeId","salaryRangesList","salaryRangeId","FiltersGroup","renderTypesOfSalaryRange","FilterEmployeSalary","map","eachSalaryRange","renderTypesOfEmployment","changeEmploymentType","eachEmployeeType","Jobs","AllJobList","employmentTypeList","minPackage","searchInputValue","getFilterAndJobs","join","jobsApiUrl","jobResponse","fetchedJobData","updatedJobData","jobs","eachJob","company_logo_url","employment_type","job_description","package_per_annum","renderNoView","renderJobItems","length","renderLoader","renderAllJobs","employmentId","includes","prevState","newList","filter","item","salaryId","ChangeSearchInput","searchJobs","onKeyDown","onEnterSearchInput","SkillItem","skillDetails","skillImage","SimilarJobItem","similarJobDetails","similarJobImage","similarEmploymentType","similarJobDescription","JobItemDetails","jobDetailsData","skills","formatSimilarJobs","similarJob","formatSkillList","eachSkill","image_url","formattedJobDetailsData","detailedData","job_details","companyWebsiteUrl","company_website_url","lifeAtCompanyDescription","life_at_company","description","lifeAtCompanyImageUrl","getJobDetails","match","params","url","similarJobs","similar_jobs","skillList","renderJobDetails","href","rel","eachSimilarJob","refresh","renderJobDetailsRoute","NotFound","ProtectedRoute","Cookie","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dc74856.chunk.js","sourcesContent":["import {Component} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport './index.css'\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    errorMsg: '',\n    showError: false,\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n    Cookies.set('jwt_token', jwtToken, {expires: 30})\n    history.replace('/')\n  }\n\n  onSubmitFailure = error => {\n    this.setState({showError: true, errorMsg: error})\n  }\n\n  submitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const apiUrl = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n\n    const response = await fetch(apiUrl, options)\n    console.log(response)\n    const data = await response.json()\n    console.log(data)\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  render() {\n    const {showError, errorMsg} = this.state\n    const token = Cookies.get('jwt_token')\n    if (token !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"Login-container\">\n        <div className=\"login-form-card\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"logo\"\n          />\n          <form className=\"form-container\" onSubmit={this.submitForm}>\n            <div className=\"input-field\">\n              <label className=\"label\" htmlFor=\"username\">\n                USERNAME\n              </label>\n              <input\n                type=\"text\"\n                className=\"input\"\n                placeholder=\"Username\"\n                onChange={this.onChangeUsername}\n                id=\"username\"\n              />\n            </div>\n\n            <div className=\"input-field\">\n              <label className=\"label\" htmlFor=\"password\">\n                PASSWORD\n              </label>\n              <input\n                type=\"password\"\n                className=\"input\"\n                placeholder=\"Password\"\n                onChange={this.onChangePassword}\n                id=\"password\"\n              />\n            </div>\n            <button type=\"submit\" className=\"login-btn\">\n              Login\n            </button>\n            {showError && <p className=\"error-message\">*{errorMsg}</p>}\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {withRouter, Link} from 'react-router-dom'\nimport './index.css'\n\nclass Header extends Component {\n  onClickLogout = () => {\n    const {history} = this.props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n\n  render() {\n    return (\n      <div className=\"header-container\">\n        <Link to=\"/\" className=\"nav-item-link\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            className=\"nav-logo\"\n            alt=\"website logo\"\n          />\n        </Link>\n        <ul className=\"nav-card\">\n          <div className=\"controls\">\n            <Link to=\"/\" className=\"nav-item-link\">\n              <li className=\"nav-item\">Home</li>\n            </Link>\n            <Link to=\"/jobs\" className=\"nav-item-link\">\n              <li className=\"nav-item\">Jobs</li>\n            </Link>\n          </div>\n          <li className=\"nav-item\">\n            <button\n              type=\"button\"\n              onClick={this.onClickLogout}\n              className=\"logout-btn\"\n            >\n              Logout\n            </button>\n          </li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import {Component} from 'react'\nimport {Redirect, Link} from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport Header from '../Header'\nimport './index.css'\n\nclass Home extends Component {\n  render() {\n    const token = Cookies.get('jwt_token')\n    if (token === undefined) {\n      return <Redirect to=\"/Login\" />\n    }\n    return (\n      <>\n        <Header />\n        <div className=\"home-container\">\n          <div className=\"banner-section\">\n            <h1 className=\"heading\">Find The Job That Fits Your Life</h1>\n            <p className=\"description\">\n              Millions of people are searching for jobs,salary\n              information,company reviews.Find the job that fits your abilities\n              and potential.\n            </p>\n            <Link to=\"/jobs\">\n              <button type=\"button\" className=\"find-jobs-btn\">\n                Find Jobs\n              </button>\n            </Link>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Home\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Profile extends Component {\n  state = {\n    apiStatus: apiStatusConstants.initial,\n    profileData: {},\n  }\n\n  componentDidMount() {\n    this.getProfileDetails()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {profileData} = this.state\n    if (profileData !== nextState.profileData) {\n      return true\n    }\n    return false\n  }\n\n  retry = () => this.getProfileDetails()\n\n  getProfileDetails = async () => {\n    const jwtToken = Cookies.get('jwt_token')\n    const profileUrl = 'https://apis.ccbp.in/profile'\n\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const response = await fetch(profileUrl, options)\n    if (response.ok === true) {\n      const fetchedData = await response.json()\n\n      const updateFetchedData = {\n        name: fetchedData.profile_details.name,\n        profileImageUrl: fetchedData.profile_details.profile_image_url,\n        shortBio: fetchedData.profile_details.short_bio,\n      }\n      this.setState({\n        profileData: updateFetchedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  //   shouldshouldComponentUpdate(nextProps, nextState) {\n  //     const {profileData} = this.state\n  //     if (profileData !== nextState.profileData) {\n  //       return true\n  //     }\n  //     return false\n  //   }\n\n  renderProfileSection = () => {\n    const {profileData} = this.state\n    console.log(profileData)\n    const {name, profileImageUrl, shortBio} = profileData\n    return (\n      <div className=\"profile-container\">\n        <img src={profileImageUrl} className=\"avatar\" alt=\"profile-avatar\" />\n        <h1 className=\"name\">{name}</h1>\n        <p className=\"bio\">{shortBio}</p>\n      </div>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"profile-failure-view\">\n      <button type=\"button\" onClick={this.retry} className=\"retry-btn\">\n        Retry\n      </button>\n    </div>\n  )\n\n  retry = () => {\n    this.getProfileDetails()\n  }\n\n  renderProfileLoader = () => (\n    <div className=\"profile-loader-container\" testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderProfile = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.success:\n        return this.renderProfileSection()\n      case apiStatusConstants.inProgress:\n        return this.renderProfileLoader()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return <div>{this.renderProfile()}</div>\n  }\n}\n\nexport default Profile\n","import {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport {FaSuitcase} from 'react-icons/fa'\nimport {ImLocation} from 'react-icons/im'\nimport {AiTwotoneStar} from 'react-icons/ai'\nimport './index.css'\n\nclass JobItem extends Component {\n  render() {\n    const {jobDetails} = this.props\n    const {\n      companyLogoUrl,\n      employmentType,\n      jobDescription,\n      location,\n      packagePerAnnum,\n      rating,\n      title,\n      id,\n    } = jobDetails\n    return (\n      <Link to={`/jobs/${id}`} className=\"job-item-link\">\n        <li className=\"job-item-card\">\n          <div className=\"company-details\">\n            <img src={companyLogoUrl} className=\"logo-img\" alt=\"company logo\" />\n            <div className=\"job-info\">\n              <h1 className=\"job-title\">{title}</h1>\n              <div className=\"rating-item\">\n                <AiTwotoneStar className=\"star\" />\n                <p className=\"rating-value\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"additional-details\">\n            <div className=\"location-jobtype-container\">\n              <div className=\"location\">\n                <ImLocation />\n                <p className=\"job-description\">{location}</p>\n              </div>\n              <div className=\"employment-type\">\n                <FaSuitcase />\n                <p className=\"job-description\">{employmentType}</p>\n              </div>\n            </div>\n            <p className=\"salary\">{packagePerAnnum}</p>\n          </div>\n          <hr className=\"horizontal-line\" />\n          <h1 className=\"description-heading\">Description</h1>\n          <p className=\"detailed-description\">{jobDescription}</p>\n        </li>\n      </Link>\n    )\n  }\n}\n\nexport default JobItem\n","import './index.css'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nconst FiltersGroup = props => {\n  const renderTypesOfSalaryRange = () => {\n    const {FilterEmployeSalary} = props\n    return salaryRangesList.map(eachSalaryRange => {\n      const onClickFilterEmployeSalary = () => {\n        FilterEmployeSalary(eachSalaryRange.salaryRangeId)\n      }\n      return (\n        <li\n          className=\"employment-type-input-item\"\n          onClick={onClickFilterEmployeSalary}\n          key={eachSalaryRange.salaryRangeId}\n        >\n          <input\n            type=\"radio\"\n            name=\"salary\"\n            id={eachSalaryRange.salaryRangeId}\n          />\n          <label\n            className=\"employee-type-label\"\n            htmlFor={eachSalaryRange.salaryRangeId}\n          >\n            {eachSalaryRange.label}\n          </label>\n        </li>\n      )\n    })\n  }\n\n  const renderTypesOfEmployment = () => {\n    const {changeEmploymentType} = props\n    return employmentTypesList.map(eachEmployeeType => {\n      const onClickFilterEmploymentType = () =>\n        changeEmploymentType(eachEmployeeType.employmentTypeId)\n      return (\n        <li\n          className=\"employment-type-input-item\"\n          onClick={onClickFilterEmploymentType}\n          key={eachEmployeeType.employmentTypeId}\n        >\n          <input type=\"checkbox\" id={eachEmployeeType.employmentTypeId} />\n          <label\n            className=\"employee-type-label\"\n            htmlFor={eachEmployeeType.employmentTypeId}\n          >\n            {eachEmployeeType.label}\n          </label>\n        </li>\n      )\n    })\n  }\n\n  const typesOfEmployment = () => (\n    <div className=\"types-of-employment-section\">\n      <h1 className=\"filter-heading\">Type of employment</h1>\n      <ul className=\"types-of-employment\">{renderTypesOfEmployment()}</ul>\n      <hr className=\"horizontal-line\" />\n    </div>\n  )\n\n  const typesOfSalaries = () => (\n    <div className=\"types-of-salary-section\">\n      <h1 className=\"filter-heading\"> Salary Range</h1>\n      <ul className=\"types-of-employment\">{renderTypesOfSalaryRange()}</ul>\n    </div>\n  )\n\n  return (\n    <div className=\"filters-group-container\">\n      {typesOfEmployment()}\n      {typesOfSalaries()}\n    </div>\n  )\n}\n\nexport default FiltersGroup\n","import {Component} from 'react'\nimport {BsSearch} from 'react-icons/bs'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport Header from '../Header'\nimport Profile from '../Profile'\nimport JobItem from '../JobItem'\nimport FiltersGroup from '../FiltersGroup'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Jobs extends Component {\n  state = {\n    AllJobList: [],\n    apiStatus: apiStatusConstants.initial,\n    employmentTypeList: [],\n    minPackage: '',\n    searchInputValue: '',\n  }\n\n  componentDidMount() {\n    this.getFilterAndJobs()\n  }\n\n  //   filterSection = () => (\n  //     <div className=\"filter-section\">\n  //       <Profile />\n  //       <hr className=\"horizontal-line\" />\n\n  //     </div>\n  //   )\n\n  //   jobsSection = () => (\n  //     <div className=\"jobSection\">\n  //       <div className=\"search-container\">\n  //         <input\n  //           type=\"search\"\n  //           className=\"search-field\"\n  //           // onClick={this.ChangeSearchInput()}\n  //           placeholder=\"Search\"\n  //         />\n  //         <button type=\"button\" className=\"search-btn\" testid=\"searchButton\">\n  //           <BsSearch className=\"search-icon\" />\n  //         </button>\n  //       </div>\n  //       <AllJobsSection />\n  //     </div>\n  //   )\n\n  getFilterAndJobs = async () => {\n    const {employmentTypeList, minPackage, searchInputValue} = this.state\n    const employmentType = employmentTypeList.join(',')\n    console.log(employmentType)\n    const jobsApiUrl = `https://apis.ccbp.in/jobs?employment_type=${employmentType}&minimum_package=${minPackage}&search=${searchInputValue}`\n    console.log(jobsApiUrl)\n    const jwtToken = Cookies.get('jwt_token')\n\n    const options = {\n      headers: {\n        Authorization: `BEARER ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const jobResponse = await fetch(jobsApiUrl, options)\n    if (jobResponse.ok === true) {\n      const fetchedJobData = await jobResponse.json()\n\n      const updatedJobData = fetchedJobData.jobs.map(eachJob => ({\n        companyLogoUrl: eachJob.company_logo_url,\n        employmentType: eachJob.employment_type,\n        jobDescription: eachJob.job_description,\n        location: eachJob.location,\n        packagePerAnnum: eachJob.package_per_annum,\n        rating: eachJob.rating,\n        title: eachJob.title,\n        id: eachJob.id,\n      }))\n      this.setState({\n        AllJobList: updatedJobData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else this.setState({apiStatus: apiStatusConstants.failure})\n  }\n\n  renderNoView = () => (\n    <div className=\"no-view\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n        alt=\"no jobs\"\n        className=\"no-jobs-img\"\n      />\n      <h1 className=\"no-view-heading\">No jobs Found</h1>\n      <p className=\"no-view-description\">\n        We could not find any jobs. Try other filters\n      </p>\n      <button type=\"button\" onClick={this.retry}>\n        Retry\n      </button>\n    </div>\n  )\n\n  renderJobItems = () => {\n    const {AllJobList, searchInputValue} = this.state\n    // const filterJobList = AllJobList.filter(eachJob =>\n    //   eachJob.title.toLowerCase().includes(searchInputValue),\n    // )\n    const shouldShowProductsList = AllJobList.length < 1\n\n    return shouldShowProductsList ? (\n      this.renderNoView()\n    ) : (\n      <ul className=\"jobs-list-container\">\n        {AllJobList.map(eachJob => (\n          <JobItem key={eachJob.id} jobDetails={eachJob} />\n        ))}\n      </ul>\n    )\n  }\n\n  renderLoader = () => (\n    <div className=\"loader-container\" testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureView = () => (\n    <div className=\"failure-view-container\">\n      <>\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n          alt=\"failure view\"\n          className=\"failure-image\"\n        />\n        <h1 className=\"failure-heading\">Oops! Something Went Wrong</h1>\n        <p className=\"failure-description\">\n          We cannot seem to find the page you are looking for\n        </p>\n        <button type=\"button\" onClick={this.retry} className=\"retry-btn\">\n          Retry\n        </button>\n      </>\n    </div>\n  )\n\n  renderAllJobs = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.success:\n        return this.renderJobItems()\n      case apiStatusConstants.inProgress:\n        return this.renderLoader()\n      default:\n        return null\n    }\n  }\n\n  changeEmploymentType = employmentId => {\n    const {employmentTypeList} = this.state\n    if (employmentTypeList.includes(employmentId) === false) {\n      this.setState(\n        prevState => ({\n          employmentTypeList: [...prevState.employmentTypeList, employmentId],\n        }),\n        this.getFilterAndJobs,\n      )\n      // } else {\n      //   const indexOfSelected = employmentTypeList.indexOf(employmentId)\n      //   const filteredActiveEmployment = employmentTypeList.splice(\n      //     indexOfSelected,\n      //     1,\n      //   )\n\n      //   this.setState(\n      //     {employmentTypeList: filteredActiveEmployment},\n      //     this.getFilterAndJobs,\n      //   )\n      // }\n    } else {\n      const newList = employmentTypeList.filter(\n        item => item.employmentId !== employmentId,\n      )\n      this.setState({employmentTypeList: newList}, this.getFilterAndJobs)\n    }\n  }\n\n  FilterEmployeSalary = salaryId => {\n    this.setState({minPackage: salaryId}, this.getFilterAndJobs)\n  }\n\n  ChangeSearchInput = event => {\n    this.setState({searchInputValue: event.target.value})\n  }\n\n  retry = () => this.getFilterAndJobs()\n\n  //   onEnterSearchInput = event => {\n  //     // if (event.key === 'Enter') {\n  //     this.setState({searchInputValue: event.target.value}, this.getFilterAndJobs)\n  //     // }\n  //   }\n\n  searchJobs = () => {\n    // this.setState({searchInputValue: event.target.value})\n    // this.ChangeSearchInput()\n    this.getFilterAndJobs()\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"jobs-section-route\">\n          <Header />\n\n          <div className=\"jobs-filter-section\">\n            <div className=\"filter-profile-section\">\n              <Profile />\n              <hr className=\"horizontal-line\" />\n              <FiltersGroup\n                changeEmploymentType={this.changeEmploymentType}\n                FilterEmployeSalary={this.FilterEmployeSalary}\n              />\n            </div>\n            <div className=\"jobSection\">\n              <div className=\"search-container\">\n                <input\n                  type=\"search\"\n                  className=\"search-field\"\n                  onChange={this.ChangeSearchInput}\n                  onKeyDown={this.onEnterSearchInput}\n                  placeholder=\"Search\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"search-btn\"\n                  testid=\"searchButton\"\n                  onClick={this.searchJobs}\n                >\n                  <BsSearch className=\"search-icon\" />\n                </button>\n              </div>\n              {this.renderAllJobs()}\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Jobs\n","import './index.css'\n\nconst SkillItem = props => {\n  const {skillDetails} = props\n  return (\n    <li className=\"skill-item\" key={skillDetails.name}>\n      <img\n        src={skillDetails.skillImage}\n        alt={skillDetails.name}\n        className=\"skill-image\"\n      />\n      <p className=\"skill-head\">{skillDetails.name}</p>\n    </li>\n  )\n}\n\nexport default SkillItem\n","import {AiTwotoneStar} from 'react-icons/ai'\nimport {ImLocation} from 'react-icons/im'\nimport {FaSuitcase} from 'react-icons/fa'\nimport './index.css'\n\nconst SimilarJobItem = props => {\n  const {similarJobDetails} = props\n  const {\n    similarJobImage,\n    similarEmploymentType,\n    similarJobDescription,\n    rating,\n    location,\n    title,\n  } = similarJobDetails\n  return (\n    <div className=\"similar-job-item\">\n      <div className=\"company\">\n        <img\n          src={similarJobImage}\n          className=\"logo-img\"\n          alt=\"similar job company logo\"\n        />\n        <div className=\"job-role\">\n          <h1 className=\"employment-type\">{title}</h1>\n          <div className=\"rating-item\">\n            <AiTwotoneStar className=\"star\" />\n            <p className=\"rating-value\">{rating}</p>\n          </div>\n        </div>\n      </div>\n      <h1 className=\"description-heading\">Description</h1>\n      <p className=\"similar-job-description\">{similarJobDescription}</p>\n      <div className=\"location-jobtype-container\">\n        <div className=\"location\">\n          <ImLocation />\n          <p className=\"job-description\">{location}</p>\n        </div>\n        <div className=\"employment-type\">\n          <FaSuitcase />\n          <p className=\"job-description\">{similarEmploymentType}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SimilarJobItem\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport {FaSuitcase} from 'react-icons/fa'\nimport {ImLocation} from 'react-icons/im'\nimport {AiTwotoneStar} from 'react-icons/ai'\nimport {HiExternalLink} from 'react-icons/hi'\nimport './index.css'\nimport SkillItem from '../SkillItem'\nimport Header from '../Header'\nimport SimilarJobItem from '../SimilarJobItem'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass JobItemDetails extends Component {\n  state = {\n    jobDetailsData: {},\n    similarJobDetails: [],\n    skills: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getJobDetails()\n  }\n\n  formatSimilarJobs = similarJob => ({\n    id: similarJob.id,\n    similarJobImage: similarJob.company_logo_url,\n    similarEmploymentType: similarJob.employment_type,\n    similarJobDescription: similarJob.job_description,\n    rating: similarJob.rating,\n    location: similarJob.location,\n    title: similarJob.title,\n  })\n\n  formatSkillList = eachSkill => ({\n    name: eachSkill.name,\n    skillImage: eachSkill.image_url,\n  })\n\n  formattedJobDetailsData = detailedData => ({\n    companyLogoUrl: detailedData.job_details.company_logo_url,\n    companyWebsiteUrl: detailedData.job_details.company_website_url,\n    employmentType: detailedData.job_details.employment_type,\n    id: detailedData.job_details.id,\n    jobDescription: detailedData.job_details.job_description,\n    location: detailedData.job_details.location,\n    packagePerAnnum: detailedData.job_details.package_per_annum,\n    rating: detailedData.job_details.rating,\n    title: detailedData.job_details.title,\n    lifeAtCompanyDescription:\n      detailedData.job_details.life_at_company.description,\n    lifeAtCompanyImageUrl: detailedData.job_details.life_at_company.image_url,\n  })\n\n  getJobDetails = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const url = `https://apis.ccbp.in/jobs/${id}`\n    const jwtToken = Cookies.get('jwt_token')\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `BEARER ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    console.log(response)\n    // let skillList = []\n    if (response.ok === true) {\n      const detailedData = await response.json()\n      console.log(detailedData)\n      const jobDetails = this.formattedJobDetailsData(detailedData)\n      // console.log(jobDetails)\n      const similarJobs = detailedData.similar_jobs.map(eachJob =>\n        this.formatSimilarJobs(eachJob),\n      )\n      console.log(similarJobs)\n      const skillList = detailedData.job_details.skills.map(eachSkill =>\n        this.formatSkillList(eachSkill),\n      )\n      console.log(skillList)\n\n      this.setState({\n        jobDetailsData: jobDetails,\n        skills: skillList,\n        similarJobDetails: similarJobs,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderJobDetails = () => {\n    const {jobDetailsData, skills, similarJobDetails} = this.state\n    const {\n      companyLogoUrl,\n      companyWebsiteUrl,\n      employmentType,\n      lifeAtCompanyImageUrl,\n      jobDescription,\n      lifeAtCompanyDescription,\n      location,\n      packagePerAnnum,\n      rating,\n      title,\n    } = jobDetailsData\n    return (\n      <div className=\"job-item-details-section\">\n        <div className=\"job-details-card\">\n          <div className=\"company-details\">\n            <img\n              src={companyLogoUrl}\n              className=\"logo-img\"\n              alt=\"job details company logo\"\n            />\n            <div className=\"job-info\">\n              <h1 className=\"job-title\">{title}</h1>\n              <div className=\"rating-item\">\n                <AiTwotoneStar className=\"star\" />\n                <p className=\"rating-value\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"additional-details\">\n            <div className=\"location-jobtype-container\">\n              <div className=\"location\">\n                <ImLocation />\n                <p className=\"job-description\">{location}</p>\n              </div>\n              <div className=\"employment-type\">\n                <FaSuitcase />\n                <p className=\"job-description\">{employmentType}</p>\n              </div>\n            </div>\n            <p className=\"salary\">{packagePerAnnum}</p>\n          </div>\n          <hr className=\"horizontal-line\" />\n          <div className=\"description-companyLink-container\">\n            <h1 className=\"description-heading\">Description</h1>\n            <a\n              href={companyWebsiteUrl}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"company-link\"\n            >\n              <p>Visit</p>\n              <HiExternalLink />\n            </a>\n          </div>\n          <p className=\"description\">{jobDescription}</p>\n          <h1 className=\"second-heading\">Skills</h1>\n          <ul className=\"skills-list-container\">\n            {skills.map(eachSkill => (\n              <SkillItem key={eachSkill.name} skillDetails={eachSkill} />\n            ))}\n          </ul>\n          <h1 className=\"second-heading\">Life at Company</h1>\n          <div className=\"life-at-company-section\">\n            <p className=\"life-at-company-description\">\n              {lifeAtCompanyDescription}\n            </p>\n            <img\n              className=\"life-at-company-pic\"\n              src={lifeAtCompanyImageUrl}\n              alt=\"life at company\"\n            />\n          </div>\n        </div>\n        <h1 className=\"second-heading\">Similar Jobs</h1>\n        <ul className=\"similar-jobs-list-container\">\n          {similarJobDetails.map(eachSimilarJob => (\n            <SimilarJobItem\n              key={eachSimilarJob.id}\n              similarJobDetails={eachSimilarJob}\n            />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  refresh = () => {\n    this.getJobDetails()\n  }\n\n  renderFailureView = () => (\n    <div className=\"failure-view-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n      />\n      <h1 className=\"failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-description\">\n        We cannot seem to find the page you are looking for\n      </p>\n      <button type=\"button\" onClick={this.refresh} className=\"retry-btn\">\n        Retry\n      </button>\n    </div>\n  )\n\n  renderLoader = () => (\n    <div className=\"loader-container\" testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderJobDetailsRoute = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.success:\n        return this.renderJobDetails()\n      case apiStatusConstants.inProgress:\n        return this.renderLoader()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"jobDetailsRoute\">{this.renderJobDetailsRoute()}</div>\n      </>\n    )\n  }\n}\n\nexport default JobItemDetails\n","import Header from '../Header'\nimport './index.css'\n\nconst NotFound = () => (\n  <>\n    <div className=\"header\">\n      <Header />\n    </div>\n    <div className=\"not-found-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n        alt=\"not found\"\n        className=\"not-found-img\"\n      />\n      <h1 className=\"heading\">Page Not Found</h1>\n      <p className=\"para\">\n        we’re sorry, the page you requested could not be found\n      </p>\n    </div>\n  </>\n)\n\nexport default NotFound\n","import {Redirect, Route} from 'react-router-dom'\nimport Cookie from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const token = Cookie.get('jwt_token')\n  if (token === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {Switch, Route, Redirect} from 'react-router-dom'\nimport './App.css'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Jobs from './components/Jobs'\nimport JobItemDetails from './components/JobItemDetails'\nimport NotFound from './components/Not Found'\nimport ProtectedRoute from './components/Protected Route'\n// These are the lists used in the application. You can move them to any component needed.\n\n// Replace your code here\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n    <ProtectedRoute exact path=\"/jobs/:id\" component={JobItemDetails} />\n    <Route path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"not-found\" />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}